def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    signingConfigs {
        release {
            storeFile file('release.jks')
            storePassword '123456'
            keyAlias 'reverse'
            keyPassword '654321'
        }
        debug {
            storeFile file('debug.jks')
            storePassword '123456'
            keyAlias 'reverse'
            keyPassword '654321'
        }
    }
    compileSdkVersion 30

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.tl.flutter_app"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            jniDebuggable true
            renderscriptDebuggable true
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    flavorDimensions 'env'
    productFlavors {
        dev {
            dimension 'env'
            applicationIdSuffix 'dev'
            versionNameSuffix 'dev'
        }
        sit {
            dimension 'env'
            applicationIdSuffix 'sit'
            versionNameSuffix 'sit'
        }
        uat {
            dimension 'env'
            applicationIdSuffix 'uat'
            versionNameSuffix 'uat'
        }
        prod {
            dimension 'env'
        }
    }
}

flutter {
    source '../..'
}
